spring:
  application:
    name: retail-inventory-platform

  profiles:
    active: railway

  # Use H2 in-memory database for Railway testing
  datasource:
    url: jdbc:h2:mem:testdb
    username: sa
    password: 
    driver-class-name: org.h2.Driver

  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        format_sql: false
        show_sql: false
    show-sql: false

  h2:
    console:
      enabled: true
      path: /h2-console

  # Disable Flyway for H2
  flyway:
    enabled: false

  # Disable Redis for now
  redis:
    host: localhost
    port: 6379
    timeout: 2000ms

  # Disable Kafka for now
  kafka:
    bootstrap-servers: localhost:9092

  # Disable GraphQL for now
  graphql:
    graphiql:
      enabled: false

  # Security Configuration
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID:}
            client-secret: ${GOOGLE_CLIENT_SECRET:}

# Application specific configuration
app:
  name: Retail Inventory Platform
  version: 1.0.0

  # ML Service Integration
  ml-service:
    base-url: ${ML_SERVICE_URL:http://localhost:8001}
    timeout: 30000ms

  # Security Configuration
  security:
    jwt:
      secret: ${JWT_SECRET:your-secret-key-here}
      expiration: 86400000
      refresh-expiration: 604800000
    cors:
      allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:3001}
      allowed-methods: GET,POST,PUT,DELETE,OPTIONS
      allowed-headers: "*"
      allow-credentials: true

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: false

# Logging Configuration
logging:
  level:
    com.retailinventory: INFO
    org.springframework.security: WARN
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
    org.springframework.boot: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Server Configuration
server:
  port: ${PORT:8080}
  servlet:
    context-path: /
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain
